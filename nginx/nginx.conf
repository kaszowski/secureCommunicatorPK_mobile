events {
    worker_connections 1024;
}

http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Upstream for backend
    upstream backend {
        server backend:5000;
    }

    # Upstream for frontend
    upstream frontend {
        server frontend:5173;
    }

    server {
        listen 80;
        server_name localhost;

        # Frontend SPA routes - handle /sc/* paths  
        location /sc {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Vite HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Backend root route - serve backend templates and default content
        location / {
            proxy_pass https://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Important for cookies and authentication
            proxy_set_header Cookie $http_cookie;
            proxy_cookie_path / /;
            
            # SSL settings for backend communication
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Backend API routes - handle all API endpoints
        location /api/ {
            proxy_pass https://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Important for cookies and authentication
            proxy_set_header Cookie $http_cookie;
            proxy_cookie_path / /;
            
            # SSL settings for backend communication
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Socket.IO endpoint
        location /socket.io/ {
            proxy_pass https://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Socket.IO
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Important for cookies and authentication
            proxy_set_header Cookie $http_cookie;
            proxy_cookie_path / /;
            
            # SSL settings for backend communication
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Authentication endpoints (login, register, etc.)
        location ~ ^/(login|register|logout|refresh-token|getPublicKey)$ {
            proxy_pass https://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Important for cookies and authentication
            proxy_set_header Cookie $http_cookie;
            proxy_cookie_path / /;
            
            # SSL settings for backend communication
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Protected endpoints (conversations, messages, etc.)
        location ~ ^/(conversations|messages|keys|updateUser|conversation/create|profile)$ {
            proxy_pass https://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Important for cookies and authentication
            proxy_set_header Cookie $http_cookie;
            proxy_cookie_path / /;
            
            # SSL settings for backend communication
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Backend static files and templates (if needed)
        location ~ ^/(js|css|main)/ {
            proxy_pass https://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SSL settings for backend communication
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
